# eddieantonio zsh prompt theme
#
# Intended for macOS + iTerm2 with shell integration

# Wishlist:
#  - temporarily disable RPROMPT (to facilitate copy-pasting)

# Relevant documentation/reference:
#
# ZSH prompt expansion:
# http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html
#
# ANSI escape codes:
# http://ascii-table.com/ansi-escape-sequences.php

# An assortment of colors
#
#  see: https://jonasjacek.github.io/colors/
#
#   74 - SteelBlue
#  116 - DarkSlateGrey
#  120 - LightGreen
#  124 - Red3
#  200 - Magenta2
#  221 - LightGoldenrod2

# Here are some useful links:
#  - https://github.com/eddieantonio/prezto/blob/master/modules/prompt/functions/prompt_eddieantonio_setup
#  - https://zsh.sourceforge.io/Doc/Release/Prompt-Expansion.html
#  - https://iterm2.com/documentation-touch-bar.html
#  - https://github.com/zsh-users/zsh/blob/master/Functions/Prompts/promptinit
#  - https://github.com/zsh-users/zsh/tree/master/Functions/Prompts

prompt_eddieantonio_setup () {
    autoload -Uz add-zsh-hook
    autoload -Uz git-info-psvar

    PROMPT="$(prompt_eddieantonio_lprompt) "
    RPROMPT="$(prompt_eddieantonio_rprompt)"

    # Setup "git status in TouchBar" support (only in iTerm2)
    if [ -n "$ITERM_PROFILE" -a -x ~/.iterm2/it2setkeylabel ] ; then
        prompt_eddieantonio_touchbar_git_status=1
    else
        prompt_eddieantonio_touchbar_git_status=0
    fi

    prompt_opts=(cr percent sp)
    add-zsh-hook precmd prompt_eddieantonio_precmd
}

prompt_eddieantonio_preview () {
    print "eddieantonio theme:"
    print -Pn "$(prompt_eddieantonio_lprompt) command arg1 arg2 ... argn"
    print -n '\t'
    # Emulate git-info-psvar
    psvar=(main 7c9168c2 '' 1 1 1 1 1 2)
    print -P "$(prompt_eddieantonio_rprompt)"
}

# See: https://github.com/eddieantonio/prezto/blob/master/modules/prompt/functions/prompt_eddieantonio_setup
prompt_eddieantonio_lprompt() {
    local directory_color=32
    local success_color=74
    local warning_color=202
    local error_color=124
    local venv_color=243

    # ⚙        | Add a symbol when there's at least one background job.
    print -n '%(1j.%B⚙%b .)'

    # (.venv)  | Show the activated virtualenv, if it exists
    [[ -n "$VIRTUAL_ENV" ]] && print -n '%F{'$venv_color'}('"${VIRTUAL_ENV##*/}"')%f '

    # user@host | Show username@host if logged-in through SSH
    [[ -n "$SSH_CONNECTION" ]] && print -n '%F{green}%n@%m%f '

    # ~         | Current working dir, with ~ substitution
    print -n '%F{'$directory_color'}%1~%f'

    # 127       | Sets the foreground colour depending on previous return
    #           | code. Always shows a warning colour if shell level >= 4.
    #           | Always displays the return code if non-zero.
    print -n '%(?.'
    print -n    '%(4L.'
    print -n      '%F{'$warning_color'}.'
    print -n      '%F{'$success_color'}).'
    print -n ' %F{'$error_color'}%?)'

    # ❯❯        | Outputs extra prompts, if in subshells (up to 3 levels).
    print -n "%(2L.❯.)%(3L.❯.)"

    # ❯         | The final prompt character.
    print -n "❯"

    #           | Reset the foreground colour; add a space
    print -n '%f'
}

# Prints the format of the right prompt.
# Use print -P "$(prompt_eddieantonio_rprompt)" to preview.
prompt_eddieantonio_rprompt() {
    # Uses git-info-psvar which in turn sets psvar appropriately

    # added     ● (green)
    # removed   ● (red)
    # unstaged  ● (yellow)
    # untracked ◌ (white)
    # renamed   ↯ (green)
    # stashed   ⚑ (white)

    # 13:59     | The time, in a very faint colour.
    print -n '%F{242}%T%f'

    # Display the git prompt ONLY when the precmd has populated psvar with
    # repository status.
    print -n '%(1v.'
    print -n ' '

    #           | Changes branch name colour on merge conflict.
    print -n '%(3V.%F{200}.)'

    # master    | the branch name
    print -n '%1v%f'

    # ●         | red ● if deletions
    print -n '%(7V. %F{red}●%f.)'
    # ●         | yellow ● if modifications
    print -n '%(5V. %F{yellow}●%f.)'
    # ●         | green ● if additions
    print -n '%(6V. %F{green}●%f.)'
    # ↯         | green ↯ if renamed
    print -n '%(8V. %F{green}↯%f.)'
    # ◌         | plain ◌ if untracked
    print -n '%(4V. ◌.)'
    # 1⚑        | plain n⚑ if stashed (n = how many stashed changes)
    print -n '%(9V. %9v⚑.)'

    print -n '.)'
}

prompt_eddieantonio_precmd() {
    local touchbar_status

    git-info-psvar

    # Set TouchBar with git status, collected from git-info-psvar:
    if (( prompt_eddieantonio_touchbar_git_status )) ; then
        if [[ -n "$psvar[1]" ]] ; then
            # Show git branch and commit SHA in the touchbar:
            touchbar_status="${psvar[1]}@${psvar[2]:0:6}"
        else
            touchbar_status=''
        fi
        ~/.iterm2/it2setkeylabel set status "$touchbar_status"
    fi
}

prompt_eddieantonio_setup "$@"
# vim: set ft=zsh:
